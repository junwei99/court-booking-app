name: Deploy on Server

on:
  push:
    branches:
      - junwei99-patch-1

jobs:
  # check_changes:
  #   runs-on: ubuntu-latest
  #   # outputs:
  #   # has_changes: ${{ steps.check_changes.outputs.has_changes }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         ref: junwei99-patch-1
  #         fetch-depth: 0
  #     # - name: Check for changes in a directory
  #     #   id: check_changes
  #     #   run: |
  #     #     changes=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- ./backend)
  #     #     if [ -n "$changes" ]; then
  #     #       echo "::set-output name=has_changes::true"
  #     #       echo "Changes in backend directory detected."
  #     #     else
  #     #       echo "::set-output name=has_changes::false"
  #     #       echo "No changes on the backend"
  #     #     fi

  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: junwei99-patch-1
          fetch-depth: 0

      - name: List files in current directory
        run: |
          echo "Listing contents of $GITHUB_WORKSPACE"
          ls -al "$GITHUB_WORKSPACE"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          cd $GITHUB_WORKSPACE/backend
          docker-compose build
          docker-compose push

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Write SSH key to file
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
      - name: Deploy to Server
        env:
          HOST: ${{ vars.HOST }}
          USER: ${{ vars.USER }}
        run: |
          ssh -vvv -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST << 'EOF'
          cd court-booking-app
          docker-compose pull
          docker-compose up -d
          EOF
