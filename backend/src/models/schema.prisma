datasource db {
    provider = "postgresql"
    url      = "postgresql://junwei@localhost:5432/testing-db"
}

generator client {
    provider = "prisma-client-js"
}

model Amenity {
    id    Int            @id @default(autoincrement())
    name  String
    venue VenueAmenity[]

    @@map("amenity")
}

model Booking {
    id                 Int       @id @default(autoincrement())
    created_at         DateTime  @default(now())
    updated_at         DateTime  @default(now())
    event_unit_id      Int
    booking_start_date DateTime
    booking_end_date   DateTime
    event_unit         EventUnit @relation(fields: [event_unit_id], references: [id])

    @@map("bookings")
}

model EventCategory {
    id         Int                  @id @default(autoincrement())
    name       String
    type       String
    event_unit EventUnit[]
    venue      VenueEventCategory[]

    @@map("event_categories")
}

model EventUnit {
    id                Int           @id @default(autoincrement())
    name              String
    price             Int
    created_at        DateTime      @default(now())
    updated_at        DateTime      @default(now())
    venue_id          Int
    event_category_id Int
    booking           Booking[]
    venue             Venue         @relation(fields: [venue_id], references: [id])
    event_category    EventCategory @relation(fields: [event_category_id], references: [id])

    @@map("event_units")
}

model Location {
    id    Int     @id @default(autoincrement())
    name  String
    type  String
    venue Venue[]

    @@map("location")
}

model Venue {
    id                   Int                  @id @default(autoincrement())
    title                String
    address              String
    description          String
    min_price            Int
    max_price            Int
    phone_num            String
    website              String
    images               String[]
    social_media         Json
    location_id          Int
    location             Location             @relation(fields: [location_id], references: [id])
    event_unit           EventUnit[]
    venue_amenity        VenueAmenity[]
    venue_event_category VenueEventCategory[]

    @@map("venue")
}

model VenueAmenity {
    amenity_id Int
    venue_id   Int
    amenity    Amenity @relation(fields: [amenity_id], references: [id])
    venue      Venue   @relation(fields: [venue_id], references: [id])

    @@id([amenity_id, venue_id])
    @@map("venue_amenities")
}

model VenueEventCategory {
    venue_id          Int
    event_category_id Int
    venue             Venue         @relation(fields: [venue_id], references: [id])
    event_category    EventCategory @relation(fields: [event_category_id], references: [id])

    @@id([venue_id, event_category_id])
    @@map("venue_event_categories")
}
